"============================ my plugins start =============================
set nocompatible " be iMproved, required
filetype off " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

"call vundle#begin('~/some/path/here')
call vundle#begin()

"let Vundle manage Vundle, required
"Plugin 'wenshuai-xi/OmniCppComplete.vim'
"Plugin 'wenshuai-xi/AutoComplPop.vim'
"Plugin 'wenshuai-xi/winmanager.vim'
Plugin 'wenshuai-xi/Vundle.vim'
Plugin 'wenshuai-xi/nerdtree.vim'
Plugin 'wenshuai-xi/taglist.vim'
Plugin 'wenshuai-xi/indentLine.vim'
Plugin 'wenshuai-xi/mark.vim'
Plugin 'wenshuai-xi/minibufexpl.vim'
Plugin 'wenshuai-xi/YouCompleteMe.vim'
Plugin 'wenshuai-xi/ack.vim'
Plugin 'wenshuai-xi/LeaderF.vim'
Plugin 'wenshuai-xi/cscope.vim'

call vundle#end() " required
filetype plugin indent on " required

"============================ my plugins end=============================

"=============== for vim =====================
syntax enable " 开启语法高亮
syntax on
set background=dark
set t_Co=256 " 开启256色显示
set scrolloff=3 " 滚动时保持边距3行
set number " 开启行号显示
set cmdheight=1
set confirm " 在处理未保存或只读文件的时候，弹出确认
set autoindent    " 自动缩进
set tabstop=4    " Tab键的宽度
set expandtab " 展开tab为空格
set softtabstop=4    " 统一缩进为4
set shiftwidth=4
set backspace=2 "设置退格键可用
set hlsearch " 高亮搜索
set laststatus=2 " 始终显示状态栏
set encoding=utf-8 " 
set ignorecase " 搜索忽略大小写
set nopaste " 切换到正常模式
set cursorline
set mouse=n
set selection=exclusive
set selectmode=mouse,key
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
set foldmethod=syntax
set foldlevel=100  " 启动vim时不要自动折叠代码
set autoread "设置当文件被改动时自动载入
set autowrite "自动保存
set nobackup "从不备份
set noswapfile "禁止生成临时文件
nmap <silent>nh :nohlsearch<cr> 
nmap <silent>nm :set nonumber<cr>
nmap <silent>mn :set number<cr>
nmap <silent>cc :cclose<cr>
nmap <silent>qq :qa<cr>
nmap <silent>ww :w<cr>
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"============== indentLine ================
let g:indentLine_char = '¦' 
let g:indentLine_showFirstIndentLevel = 1 
let g:indentLine_color_term = 125 

"============== mark =================
nmap <silent><F9> \m
nmap <silent><F10> \n

"========== NERDTree ==============
"let NERDTreeQuitOnOpen = 1
"autocmd vimenter * NERDTree
"wincmd w
"autocmd VimEnter * wincmd w
map nt :NERDTreeToggle<cr>
let g:NERDTree_title = "[NERDTree]"
let NERDChristmasTree = 1
let NERDTreeAutoCenter = 1
let NERDTreeShowBookmarks = 0
let NERDTreeMouseMode = 1 
let NERDTreeShowHidden = 1
let NERDTreeMinimalUI = 1
let NERDTreeWinSize = 20
let NERDTreeWinPos = "left"
let NERDTreeAutoDeleteBuffer = 1
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'

"============== TagList ====================
"let Tlist_Auto_Open = 1
map tl :TlistToggle<cr>
let Tlist_Ctags_Cmd='/usr/bin/ctags'
let Tlist_Close_On_Select = 1
let Tlist_Use_SingleClick = 0 
let TlistHighlightTag = 1
let Tlist_Use_Right_Window = 1
let Tlist_WinWidth = 20
let Tlist_Exit_OnlyWindow=1
let Tlist_Show_One_File=1
let Tlist_Auto_Update=1

"============== miniBufexplorer ===============
nmap <silent> <F1> :MBEToggle<CR>
let g:miniBufExplorerAutoStart = 0
let g:miniBufExplVSplit = 20 
let g:miniBufExplMaxSize = 20
let g:miniBufExplBRSplit = 1
let g:miniBufExplUseSingleClick = 0 
let g:miniBufExplShowBufNumbers = 0
let g:miniBufExplCloseOnSelect = 1

"=========== YouCompleteMe ===============
set completeopt=longest,menu    "让Vim的补全菜单行为与一般IDE一致
autocmd InsertLeave * if pumvisible() == 0|pclose|endif "离开插入模式后自动关闭预览窗口
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"    "回车即选中当前项
"上下左右键的行为 会显示其他信息
inoremap <expr> <Down>     pumvisible() ? '<C-n>' : '<Down>'
inoremap <expr> <Up>       pumvisible() ? '<C-p>' : '<Up>'
inoremap <expr> <PageDown> pumvisible() ? '<PageDown><C-p><C-n>' : '<PageDown>'
inoremap <expr> <PageUp>   pumvisible() ? '<PageUp><C-p><C-n>' : '<PageUp>'
let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'  "设置全局配置文件的路径
let g:ycm_seed_identifiers_with_syntax = 1  "开启语义补全
let g:ycm_confirm_extra_conf = 0  "不显示开启vim时检查ycm_extra_conf文件的信息
let g:ycm_cache_omnifunc = 0  "每次重新生成匹配项，禁止缓存匹配项
let g:ycm_complete_in_comments = 1  "在注释中也可以补全
let g:ycm_complete_in_strings = 1  "在字符串输入中也能补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0  "注释和字符串中的文字也会被收入补全
let g:ycm_min_num_of_chars_for_completion = 2  "输入第二个字符就开始补全
let g:ycm_show_diagnostics_ui = 0  "关闭诊断信息
let g:syntastic_check_on_open = 1
let g:syntastic_enable_signs = 1
let g:syntastic_cpp_check_header = 1
let g:syntastic_cpp_remove_include_errors = 1

"============== cscope ====================
let g:cscope_open_location = 1
let g:cscope_auto_update = 0
nmap <silent> <F12> :call CscopeUpdateDB()<CR>
nmap <silent> <F2> :call ToggleLocationList()<CR>
nmap <silent> <F3> :call CscopeFind('g', expand('<cword>'))<CR>    " g: Find this definition
nmap <silent> <F4> :call CscopeFind('c', expand('<cword>'))<CR>    " c: Find functions calling this function
nmap <silent> <F5> :call CscopeFind('s', expand('<cword>'))<CR>    " s: Find this C symbol
nmap <silent> <F6> :call CscopeFind('t', expand('<cword>'))<CR>    " t: Find this text string
nmap <silent> <F7> :call CscopeFind('f', expand('<cword>'))<CR>    " f: Find this file
nmap <silent> <F8> :call CscopeFind('i', expand('<cword>'))<CR>    " i: Find files #including this file

"============== ack =======================
if executable('ag')
    let g:ackprg = 'ag --vimgrep'
endif
let g:ackhighlight = 1
let g:ack_qhandler = "botright copen 15"
let g:ack_autoclose = 1
let g:ack_use_cword_for_empty_search = 1
let g:ack_use_dispatch = 1

"============== LeaderF =====================
let g:Lf_WindowHeight = 0.20
let g:Lf_ShowHidden = 0 
let g:Lf_UseVersionControlTool = 0
let g:Lf_WildIgnore = {
            \ 'dir': ['.svn','.git','.hg'],
            \ 'file': ['*.sw?','~$*','*.bak','*.exe','*.o','*.*.o','*.so','*.py[co]',
            \           '.git*','*.*cmd','.mod*','*.a','*.bin','*.dat','*.ko','.*.o.cmd']
            \}
nmap <silent> <C-p> :LeaderfFile<CR>
nmap <silent> <C-b> :LeaderfBufTag<CR>
nmap <silent> <C-f> :LeaderfFunction<CR>

"============== vim mergetool =============
map <silent> m1 :diffget 1<CR> :diffupdate<CR>
map <silent> m2 :diffget 2<CR> :diffupdate<CR>
map <silent> m3 :diffget 3<CR> :diffupdate<CR>
map <silent> m4 :diffget 4<CR> :diffupdate<CR>

"============= winmanager =================
"map wm :WMToggle<cr>
"let g:winManagerWindowLayout='NERDTree|TagList'
"let g:defaultExplorer = 0 
"let g:winManagerWidth = 30

"=========== omnicppcomplete ===============
"set completeopt=menu,menuone
"let OmniCpp_GlobalScopeSearch = 1
"let OmniCpp_NamespaceSearch = 2
"let OmniCpp_DisplayMode = 1
"let OmniCpp_ShowScopeInAbbr = 1
"let OmniCpp_ShowPrototypeInAbbr = 1
"let OmniCpp_ShowAccess = 1
"let OmniCpp_MayCompleteDot = 1
"let OmniCpp_MayCompleteArrow = 1
"let OmniCpp_MayCompleteScope = 1
"let OmniCpp_DefaultNamespace=["std"]
"let OmniCpp_SelectFirstItem = 2

""============== AutoComplPop ===============
"highlight Pmenu ctermfg=0 ctermbg=13 guibg=Magenta
"highlight PmenuSel ctermfg=0 ctermbg=10 guibg=Yellow
"highlight PmenuSbar ctermbg=248 guibg=Grey
"highlight PmenuThumb ctermbg=15 guibg=White
